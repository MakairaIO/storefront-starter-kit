.teaser-grid
  padding var(--spacing-s) var(--spacing-m)

  @media (min-width var(--breakpoint-xs))
    display grid
    grid-gap var(--spacing-m) var(--spacing-s)
    grid-template-areas "top-right top-right" "left bottom-right" "left bottom-right" "middle middle"
    grid-template-columns repeat(2, 1fr)

  @media (min-width var(--breakpoint-m))
    grid-gap var(--spacing-m) var(--spacing-m)
    grid-template-areas "top-right top-right top-right" "left bottom-right bottom-right" "left middle middle"
    grid-template-columns repeat(3, 1fr)
    grid-template-rows repeat(3, 22.50rem)

  @media (min-width var(--breakpoint-l))
    grid-template-columns repeat(4, 1fr)
    grid-template-rows repeat(2, 22.50rem)
    grid-template-areas "left top-right top-right top-right" "left middle middle bottom-right"

  @media (min-width var(--breakpoint-xl))
    padding var(--spacing-s) var(--spacing-m)

.teaser-grid__tile
  display block
  position relative

  & + &
    margin-top var(--spacing-m)

    @media (min-width var(--breakpoint-xs))
      // reset here since we switch to CSS-Grid with gaps now
      margin-top 0

  picture
    display flex
    height 100%

    img
      width 100%
      height 100%
      object-fit cover

  .heading
    display inline-block
    margin-bottom var(--spacing-xs)

    @media (min-width var(--breakpoint-xs))
      margin-bottom var(--spacing-s)

.teaser-grid__content
  display flex
  flex-direction column
  align-items flex-start
  background var(--grid-teaser-overlay-background-opaque-default)
  padding var(--spacing-s) var(--spacing-m) var(--spacing-m)

  .heading
    @media (min-width var(--breakpoint-xs))
      font-h5()

  .copytext
    @media (min-width var(--breakpoint-xs))
      font-l()

  button
    align-self flex-end


.teaser-grid__tile--top-right
  grid-area top-right

  picture
    height 11.25rem

  @media (min-width var(--breakpoint-xs))
    height 22.50rem

    picture
      height 100% // reset fixed height

    .teaser-grid__content
      justify-content flex-end
      position absolute
      top 0
      bottom 0
      left 0
      max-width 16.13rem

  @media (min-width var(--breakpoint-m))

    .teaser-grid__content
      max-width 18.13rem

  @media (min-width var(--breakpoint-xl))

    .teaser-grid__content
      max-width 20.31rem


.teaser-grid__tile--left
  grid-area left
  height 31.50rem

  .teaser-grid__content
    position absolute
    bottom 0

  @media (min-width var(--breakpoint-xs))
    height 39.00rem

  @media (min-width var(--breakpoint-m))
    height 100%

    .teaser-grid__content
      min-height 22.50rem
      justify-content flex-end

.teaser-grid__tile--bottom-right
  grid-area bottom-right
  height 18.75rem

  .teaser-grid__content
    justify-content flex-end
    position absolute
    top 0
    bottom 0
    left 0
    right 0

  @media (min-width var(--breakpoint-xs))
    height 39.00rem
    display flex
    flex-direction column
    justify-content flex-end

    .teaser-grid__content
      height 100%
      position relative
      order -1

    picture
      height 19.50rem

  @media (min-width var(--breakpoint-m))
    display block
    height 100%

    .teaser-grid__content
      position absolute
      top 0
      bottom 0
      right 0
      left 0

    picture
      height 100%


.teaser-grid__tile--middle
  grid-area middle

  picture
    height 11.25rem

  @media (min-width var(--breakpoint-xs))
    height 22.50rem

    picture
      height 100% // reset fixed height

    .teaser-grid__content
      justify-content flex-end
      position absolute
      top 0
      bottom 0
      right 0
      max-width 16.13rem

  @media (min-width var(--breakpoint-m))

    .teaser-grid__content
      max-width 18.13rem

  @media (min-width var(--breakpoint-xl))

    .teaser-grid__content
      max-width 20.31rem


.teaser-grid--inverted
  color var(--neutral-10)

  .teaser-grid__content
    background var(--grid-teaser-overlay-background-opaque-inverted)

